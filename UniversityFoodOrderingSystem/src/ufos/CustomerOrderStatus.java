/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ufos;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class CustomerOrderStatus extends javax.swing.JFrame {
    GUI ui = new GUI();
    User u = new User();
    DB db = new DB("Order");
    DB fdb = new DB("FoodReview");
    DB ddb = new DB("FoodReview");
    DB.OrderRowMapper mapper = db.new OrderRowMapper();

    /**
     * Creates new form OrderStatus
     */
    public CustomerOrderStatus() {
        initComponents();
    }
    public CustomerOrderStatus(User id) {
        initComponents();     
        this.u = id;
        load();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        OrderStatusTable = new javax.swing.JTable();
        Backbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        OrderStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Vendor ID", "Runner ID", "Date", "Delivery Method", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrderStatusTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                OrderStatusTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(OrderStatusTable);
        if (OrderStatusTable.getColumnModel().getColumnCount() > 0) {
            OrderStatusTable.getColumnModel().getColumn(0).setResizable(false);
            OrderStatusTable.getColumnModel().getColumn(3).setResizable(false);
            OrderStatusTable.getColumnModel().getColumn(5).setResizable(false);
        }

        Backbtn.setText("Back");
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Order Status ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addContainerGap(442, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Backbtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(Backbtn)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        ui.callPage("CustomerFoodMenu",u);
        this.dispose();
    }//GEN-LAST:event_BackbtnActionPerformed

    private void OrderStatusTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderStatusTableMouseReleased
        int selectedRow = OrderStatusTable.getSelectedRow();
        if (selectedRow != -1) {
            String orderID = (String) OrderStatusTable.getValueAt(selectedRow, 0);
            String vendorID = (String) OrderStatusTable.getValueAt(selectedRow, 1);
            String runnerID = (String) OrderStatusTable.getValueAt(selectedRow, 2);
            String deliveryMethodID = (String) OrderStatusTable.getValueAt(selectedRow, 4);
            String status = (String) OrderStatusTable.getValueAt(selectedRow, 5);
            if (status.equals("Delivered")) {
                if (hasFoodReviewed(orderID) && hasDeliReviewed(orderID)) {   
                        CustomerReview reviewWindow = new CustomerReview(u, orderID, runnerID, vendorID,deliveryMethodID);
                        reviewWindow.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "You have already reviewed this order.");
                }
            }else if(status.equals("Done")){
                if (hasFoodReviewed(orderID)) {   
                       ReviewForFood reviewForFoodWindow = new ReviewForFood(u, orderID, vendorID);
                       reviewForFoodWindow.setVisible(true); 
                } else {
                    JOptionPane.showMessageDialog(this, "You have already reviewed this order.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Cannot review: Order status is not Done or Delivered  .");
            }

            
        }
    
    }//GEN-LAST:event_OrderStatusTableMouseReleased
    private boolean hasFoodReviewed(String orderID){
        ArrayList<String> Data = fdb.readFile();
        for (String line : Data) {
            String[] parts = line.split(",");
            if (parts[1].equals(orderID)) {
                return false;
            }   
        }
        return true;
    }
    private boolean hasDeliReviewed(String orderID){
        ArrayList<String> Data = ddb.readFile();
        for (String line : Data) {
            String[] parts = line.split(",");
            if (parts[1].equals(orderID)) {
                return false;
            }   
        }
        return true;
    }
    
    private void load() {
       DefaultTableModel model  = (DefaultTableModel)OrderStatusTable.getModel();
       // Use DB class to read data
       String Id = u.getId();
       List<Object[]> rows = db.readData(mapper);

       model.setRowCount(0);
       Set<String> orderIds = new HashSet<>(); // Set to store orderIds

       for (Object[] rowData : rows) {
           String orderId = (String) rowData[0];
           String VendorId = (String) rowData[9];
           String RunnerID = (String) rowData[11];
           String dt = (String) rowData[6];
           String DeliMethod = (String) rowData[8];
           String Status =(String)rowData[5];
           String Userid = (String)rowData[10];
  

            if (Userid.equals(Id)) {
                if (!orderIds.add(orderId)) {
                    continue;
                }
                model.addRow(new Object[]{orderId,VendorId,RunnerID,dt,DeliMethod,Status});

            } 
       }

       db.closeResources();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerOrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerOrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerOrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerOrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerOrderStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbtn;
    private javax.swing.JTable OrderStatusTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
